// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String  @id @default(cuid())
  firstName     String
  lastName      String?
  email         String  @unique
  profileImgUrl String?
  posts         Post[]
  likedPosts    Likes[]

  followers  Follows[] @relation("following")
  followings Follows[] @relation("follower")

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Follows {
  follower   User   @relation("follower", fields: [followerId], references: [id])
  followerId String

  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Likes {
  post        Post   @relation(fields: [postId], references: [id])
  postId      String
  likedUser   User   @relation(fields: [likedUserId], references: [id])
  likedUserId String

  @@id([postId, likedUserId])
}

model Post {
  id       String  @id @default(cuid())
  content  String
  imageUrl String?
  author   User    @relation(fields: [authorId], references: [id])
  authorId String
  likes    Likes[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}
